# ---
_schema-version: "3.1"
ID: learningicecream
version: 1.0.0
description: "A simple CAP project."
parameters:
  enable-parallel-deployments: true
build-parameters:
  before-all:
    - builder: custom
      commands:
        # - npx cds build --production
        - npm install
        - cds build --production
        - ./pg-build.sh
        # - mkdir -p gen/db-with-express
        # - npm run copy:db:gen
        # - npx -p @sap/cds-dk cds build --production

modules:
  # DB Deploy with combined apt and Node.JS buildpack
  - name: learningicecream-db-deployer
    type: nodejs
    path: gen/pg
    parameters:
      buildpacks:
        [https://github.com/cloudfoundry/apt-buildpack#v0.2.2, nodejs_buildpack]
      no-route: true
      no-start: true
      disk-quota: 1GB
      memory: 256MB
      tasks:
        - name: deploy-to-postgresql
          command: chmod 755 pg-build.sh && ./pg-build.sh
          # command: npm start
          disk-quota: 1GB
          memory: 256MB
    build-parameters:
      ignore: ["node_modules/"]
    requires:
      - name: learningicecream-database

  # ----------------- DB-UI with adminer -----------------------
  - name: learningicecream-adminer
    type: application
    build-parameters:
      no-source: true
    parameters:
      # Only needed to track down issues in the PostgreSQL Database deployment
      no-route: false
      no-start: true
      disk-quota: 256MB
      memory: 128MB
      docker:
        image: dockette/adminer:pgsql
      instances: 1
    requires:
      - name: learningicecream-database
  #    - name: learningicecream-external-database

  # --------------------- SERVER MODULE ------------------------
  - name: learningicecream-srv
    # ------------------------------------------------------------
    type: nodejs
    path: gen/srv
    parameters:
      buildpack: nodejs_buildpack
      memory: 256M
      disk-quota: 1024M
    #  enable-ssh: true # allows to `cf ssh learningicecream-srv`
    build-parameters:
      builder: npm
      ignore: ["node_modules/"]
    provides:
      - name: srv-api # required by consumers of CAP services (e.g. approuter)
        properties:
          srv-url: ${default-url}
    requires:
      - name: learningicecream-database
      - name: learningicecream-auth
      # - name: learningicecream-external-database

  - name: learningicecream-app
    type: nodejs
    path: app
    build-parameters:
      ignore: ["node_modules/"]
    parameters:
      memory: 256M
      disk-quota: 1024M
    requires:
      - name: learningicecream-destination-service
      - name: learningicecream-auth
      - name: srv-api
        group: destinations
        properties:
          forwardAuthToken: true
          strictSSL: false
          name: srv_api
          url: ~{srv-url}

resources:
  - name: learningicecream-auth
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: application
      path: ./xs-security.json
      config:
        xsappname: learningicecream-${space}
        tenant-mode: dedicated

  # In SAP CP only the first deployment using this definition works
  - name: learningicecream-database
    type: org.cloudfoundry.managed-service
    parameters:
      path: ./pg-options.json
      service: postgresql-db
      service-plan: standard
      skip-service-updates:
        parameters: true
      service-tags:
        - plain

  # For a second deploy use
  # npm run deploy:cf:update
  # this will use the update.mtaext

  - name: learningicecream-destination-service
    parameters:
      service-plan: lite
      service: destination
    type: org.cloudfoundry.managed-service
